import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardCopyOption

plugins {
    id "java"
    id "idea"
    id "application"
}

dependencies {
    testImplementation 'junit:junit:4.12'

    compile project(':veriblock-core')
    compile project(':nodecore-ucp')

    compile 'ch.qos.logback:logback-classic:1.2.3'
}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

run {
    standardInput = System.in
    standardOutput = System.out
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

ext {
    group = 'veriblock'
    println "archiveBaseName: $archivesBaseName"
    dockerVersion = version.toString().split(/\+/)[0]
    println "docker version = $dockerVersion"
    println "branch = ${release.grgit.branch.current.name}"

}

jar {
    manifest {
        attributes 'Name': 'nodecore/miners/pow',
                'Specification-Title': 'NodeCore Reference Proof-of-Work Miner',
                'Specification-Version': version.toString().split(/-/)[0],
                'Specification-Vendor': 'VeriBlock Foundation',
                'Implementation-Title': 'nodecore.miners.pow',
                'Implementation-Version': version,
                'Implementation-Vendor': 'VeriBlock Foundation'
    }
}

applicationName = 'nodecore-pow'
mainClassName = 'nodecore.miners.pow.MainClass'

startScripts {
    windowsStartScriptGenerator.template = resources.text.fromFile("windowsStartScript.txt")
}